name: ci
# Continuous integration action which will fire on any push to a branch that is part of a pull request.

on:
  pull_request:
    types: [opened, synchronize, reopened]

  workflow_dispatch:

env:
  DOTNET_VERSION: 7.0.x
  SOLUTION_PATH: ./src/AzureEventGridSimulator.sln
  CONFIGURATION: Release

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            runtime: win-x64
          - os: ubuntu-latest
            runtime: linux-x64
          - os: macos-latest
            runtime: osx-x64
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    steps:
      - name: log github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: setup dotnet core
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: get the code
        uses: actions/checkout@v4.1.1

      - name: clean
        run: dotnet clean
          --configuration ${{ env.CONFIGURATION }}
          --nologo
          ${{ env.SOLUTION_PATH }}

      - name: restore
        run: dotnet restore
          --runtime ${{ matrix.runtime }}
          --nologo
          ${{ env.SOLUTION_PATH }}

      - name: build
        run: dotnet build
          --configuration ${{ env.CONFIGURATION }}
          --runtime ${{ matrix.runtime }}
          --self-contained false
          --no-incremental
          --nologo
          /p:WarningLevel=4
          /p:TreatWarningsAsErrors=true
          /p:NoWarn=""
          /p:WarningsAsErrors=""
          ${{ env.SOLUTION_PATH }}

      - name: test
        run: dotnet test
          --configuration ${{ env.CONFIGURATION }}
          --runtime ${{ matrix.runtime }}
          --no-restore
          --no-build
          --nologo
          --filter "Category=unit|Category=integration"
          ${{ env.SOLUTION_PATH }}
